plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'java'
}

group = 'com.olivejua'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	querydsl.extendsFrom compileClasspath
	asciidoctorExtensions
}

ext {
	snippetsDir = file('build/generated-snippets')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'commons-io:commons-io:2.6'
	implementation 'commons-fileupload:commons-fileupload:1.3.3'
	implementation 'org.jsoup:jsoup:1.10.3'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	compileOnly 'org.projectlombok:lombok:1.18.20'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExtensions'
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'
	}
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt:4.2.2" // 사용할 AnnotationProcesoor 정의
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}